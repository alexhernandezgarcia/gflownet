import numpy.typing as npt

from rdkit import Chem
from rdkit.Chem import AllChem

def get_rdkit_molecule(smiles: str, add_hydrogens=True):
    mol = Chem.MolFromSmiles(smiles)
    if add_hydrogens:
        mol = Chem.AddHs(mol)
    return mol

def get_rdkit_atom_positions(smiles: str, extra_opt=False) -> npt.NDArray:
    """
    Returns positions of the atoms generated by rdkit
    
    Args
    ----
    smiles : str with SMILES of a molecule
    extra_opt: bool flag, if true, applies additional optimisation to the conformer

    Returns
    -------
    np.array of atom 3D positions with a shape [n_atoms, 3]
    """
    mol = get_rdkit_molecule(smiles, add_hydrogens=True)
    AllChem.EmbedMolecule(mol, randomSeed=0)
    if extra_opt:
        AllChem.MMFFOptimizeMolecule(mol, confId=0, maxIters=1000)
    return mol.GetConformer().GetPositions()